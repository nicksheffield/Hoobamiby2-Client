angular.module("app.controllers",[]),angular.module("app.directives",[]),angular.module("app.filters",[]),angular.module("app.services",[]),angular.module("app.routes",[]),angular.module("app",["ngStorage","ngSocket","ui.router","app.controllers","app.directives","app.filters","app.services","app.routes"]),angular.element(document).ready(function(){angular.bootstrap(document,["app"])}),angular.module("app.routes").run(["$rootScope","$state","$memory",function($rootScope,$state,$memory){$rootScope.$on("$stateChangeStart",function(event,toState,toParams){if(toState.data){var requireLogin=toState.data.requireLogin;requireLogin&&!$memory.player.nickname&&(event.preventDefault(),$memory.token=toParams.roomName,$state.go("login")),"login"==toState.name&&$memory.player.nickname&&(event.preventDefault(),$state.go("lobby"))}})}]),angular.module("app.routes").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("login",{url:"/",templateUrl:"app/views/login.html",controller:"loginCtrl",data:{requireLogin:!1}}).state("lobby",{url:"/lobby",templateUrl:"app/views/lobby.html",controller:"lobbyCtrl",data:{requireLogin:!0}}).state("game",{url:"/game/:roomName",templateUrl:"app/views/game.html",controller:"gameCtrl",data:{requireLogin:!0}}).state("gameover",{url:"/gameover",templateUrl:"app/views/gameOver.html",controller:"gameoverCtrl",data:{requireLogin:!0}})}]),angular.module("app.controllers").controller("gameCtrl",["$scope","$memory","$state","$stateParams","$socket",function($scope,$memory,$state,$stateParams,$socket){var roomName=$stateParams.roomName;roomName||$state.go("lobby"),void 0===$memory.game.roomName&&$socket.emit("join",{roomName:roomName,nickname:$memory.player.nickname}),$scope.start=function(){$socket.emit("start")},$scope.choose=function(playerID){console.log(playerID),$memory.player.isJudge&&$memory.game.reveal&&$socket.emit("choose",{socketID:playerID})},$socket.on("noGame",function(){$state.go("lobby")}),$socket.on("gameJoined",function(data){$memory.game=data.game,$memory.player=data.player}),$socket.on("gameOver",function(){console.log("Game Over!"),$state.go("gameover")})}]),angular.module("app.controllers").controller("gameoverCtrl",["$scope","$memory",function($scope,$memory){$scope.winner={blackCards:[]},_.forEach($memory.game.players,function(player){player.blackCards.length>$scope.winner.blackCards.length&&($scope.winner=player)}),console.log($scope.winner)}]),angular.module("app.controllers").controller("lobbyCtrl",["$scope","$socket","$memory","$state",function($scope,$socket,$memory,$state){$scope.roomName="",$scope.join=function(){console.log($scope.roomName),$socket.emit("join",{roomName:$scope.roomName,nickname:$memory.player.nickname})},$socket.emit("leave"),$scope.create=function(){console.log($socket.id),$socket.emit("create",{nickname:$memory.player.nickname})},$socket.on("gameJoined",function(data){$memory.game=data.game,$memory.player=data.player,console.log(data.player),$state.go("game",{roomName:data.game.roomName.toUpperCase()})}),$socket.on("noGame",function(){console.log("no game exists at",$scope.roomName)}),$socket.on("gameCreated",function(data){console.log("gameCreated"),$memory.game=data.game,$memory.player=data.player,$state.go("game",{roomName:data.game.roomName.toUpperCase()})})}]),angular.module("app.controllers").controller("loginCtrl",["$scope","$localStorage","$state","$memory",function($scope,$localStorage,$state,$memory){$scope.login=function(){$memory.player.nickname=$memory.player.nickname.substring(0,10),""!==$memory.player.nickname.trim()&&($localStorage.nickname=$memory.player.nickname,$memory.token?$state.go("game",{roomName:$memory.token}):$state.go("lobby"))}}]),angular.module("app.controllers").controller("mainCtrl",["$scope","$state","$memory",function($scope,$state,$memory){$scope.memory=$memory,$scope.openMenu=!1,$scope.showMenu=function(){$scope.openMenu=!$scope.openMenu},$scope.logout=function(){$memory.forget(),$state.go("login"),$scope.openMenu=!1}}]),angular.module("app.directives").directive("blackCard",[function(){function link(scope,el,attrs){scope.$watch("data",function(newVal,oldVal){void 0!==scope.data&&(scope.data.text=scope.data.text.replace("%s","_____"),scope.data.text=scope.data.text.replace("%s2","_____"),scope.data.text=scope.data.text.replace("%s3","_____"))})}return{restrict:"E",templateUrl:"app/views/blackCardDirective.html",scope:{data:"="},link:link}}]),angular.module("app.directives").directive("card",["$memory","$socket",function($memory,$socket){function link(scope,el,attrs){scope.choose=function(){console.log("clicked"),console.log("waiting?",$memory.player.waiting),$memory.player.submissions.length<$memory.game.blackCard.pick&&$memory.game.started&&!$memory.player.waiting&&($memory.player.submissions.push(scope.data),console.log("emitting"),$socket.emit("submit",scope.data))},scope.submitted=function(card){var result=_.find($memory.player.submissions,function(c){return c.text==card.text});return result},scope.memory=$memory}return{restrict:"E",templateUrl:"app/views/cardDirective.html",scope:{data:"=",clickable:"=",chosen:"="},link:link}}]),angular.module("app.directives").directive("dropZone",[function(){function link(scope,el,attrs){scope.doTheThing=function(event,obj){console.log(obj.draggable[0])},scope.dropOptions={onDrop:"doTheThing"}}return{restrict:"E",templateUrl:"app/views/dropZoneDirective.html",scope:{model:"="},link:link}}]),angular.module("app.directives").directive("flex",[function(){function link(scope,el,attrs){attrs.$observe("flex",function(value){el.css("flex",parseInt(value))})}return{restrict:"A",link:link}}]),angular.module("app.directives").directive("icon",[function(){return{restrict:"EA",scope:{glyph:"@"},template:'<i class="fa fa-{{glyph}}"></i>'}}]),angular.module("app.directives").directive("layout",[function(){function link(scope,el,attrs){}return{restrict:"A",link:link}}]),angular.module("app.directives").directive("ngClickSelect",function(){return{restrict:"AC",link:function(scope,element,attrs){element.bind("click",function(){this.select()})}}}),angular.module("app.filters").filter("range",function(){return function(input,total){total=parseInt(total);for(var i=0;total>i;i++)input.push(i);return input}}),angular.module("app.services").factory("$memory",["$localStorage","$socket",function($localStorage,$socket){var mem={game:{},token:"",player:{nickname:$localStorage.nickname},forget:function(){this.player={},delete $localStorage.nickname}};return $socket.on("gameUpdate",function(data){mem.game=data,console.log("gameUpdate",data)}),$socket.on("playerUpdate",function(data){mem.player=data,console.log("playerUpdate",data)}),mem}]);